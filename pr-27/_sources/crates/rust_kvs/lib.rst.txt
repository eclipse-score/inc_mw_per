==================
Crate ``rust_kvs``
==================


.. rust:crate:: rust_kvs
   :index: 0

   # Key-Value-Storage API and Implementation
   
   ## Introduction
   
   This crate provides a Key-Value-Store using [TinyJSON](https://crates.io/crates/tinyjson) to
   persist the data. To validate the stored data a hash is build and verified using the
   [Adler32](https://crates.io/crates/adler32) crate. No other direct dependencies are used
   besides the Rust `std` library.
   
   The key-value-storage is opened or initialized with [`Kvs::open`] and automatically flushed on
   exit by default. This can be controlled by [`Kvs::flush_on_exit`]. It is possible to manually
   flush the KVS by calling [`Kvs::flush`].
   
   All `TinyJSON` provided datatypes can be used:
     * `Number`: `f64`
     * `Boolean`: `bool`
     * `String`: `String`
     * `Null`: `()`
     * `Array`: `Vec<KvsValue>`
     * `Object`: `HashMap<String, KvsValue>`
   
   Note: JSON arrays are not restricted to only contain values of the same type.
   
   Writing a value to the KVS can be done by calling [`Kvs::set_value`] with the `key` as first
   and a `KvsValue` as second parameter. Either `KvsValue::Number(123.0)` or `123.0` can be
   used as there will be an auto-Into performed when calling the function.
   
   To read a value call [`Kvs::get_value::<T>`](Kvs::get_value) with the `key` as first
   parameter. `T` represents the type to read and can be `f64`, `bool`, `String`, `()`,
   `Vec<KvsValue>`, `HashMap<String, KvsValue` or `KvsValue`. Also `let value: f64 =
   kvs.get_value()` can be used.
   
   If a `key` isn't available in the KVS a lookup into the defaults storage will be performed and
   if the `value` is found the default will be returned. The default value isn't stored when
   [`Kvs::flush`] is called unless it's explicitly written with [`Kvs::set_value`]. So when
   defaults change always the latest values will be returned. If that is an unwanted behaviour
   it's better to remove the default value and write the value permanently when the KVS is
   initialized. To check whether a value has a default call [`Kvs::get_default_value`] and to
   see if the value wasn't written yet and will return the default call
   [`Kvs::is_value_default`].
   
   
   ## Example Usage
   
   ```
   use rust_kvs::{ErrorCode, InstanceId, Kvs, OpenNeedDefaults, OpenNeedKvs, KvsValue,KvsApi};
   use std::collections::HashMap;
   
   fn main() -> Result<(), ErrorCode> {
       let kvs = Kvs::open(
           InstanceId::new(0),
           OpenNeedDefaults::Optional,
           OpenNeedKvs::Optional)?;
   
       kvs.set_value("number", 123.0)?;
       kvs.set_value("bool", true)?;
       kvs.set_value("string", "First".to_string())?;
       kvs.set_value("null", ())?;
       kvs.set_value(
           "array",
           vec![
               KvsValue::from(456.0),
               false.into(),
               "Second".to_string().into(),
           ],
       )?;
       kvs.set_value(
           "object",
           HashMap::from([
               (String::from("sub-number"), KvsValue::from(789.0)),
               ("sub-bool".into(), true.into()),
               ("sub-string".into(), "Third".to_string().into()),
               ("sub-null".into(), ().into()),
               (
                   "sub-array".into(),
                   KvsValue::from(vec![
                       KvsValue::from(1246.0),
                       false.into(),
                       "Fourth".to_string().into(),
                   ]),
               ),
           ]),
       )?;
   
       Ok(())
   }
   ```
   
   ## Feature Coverage
   
   Feature and requirement definition:
     * [Features/Persistency/Key-Value-Storage](https://github.com/eclipse-score/score/blob/ulhu_persistency_kvs/docs/features/persistency/key-value-storage/index.rst#specification)
     * [Requirements/Stakeholder](https://github.com/eclipse-score/score/blob/ulhu_persistency_kvs/docs/requirements/stakeholder/index.rst)
   
   Supported features and requirements:
     * `FEAT_REQ__KVS__thread_safety`
     * `FEAT_REQ__KVS__supported_datatypes_keys`
     * `FEAT_REQ__KVS__supported_datatypes_values`
     * `FEAT_REQ__KVS__default_values`
     * `FEAT_REQ__KVS__update_mechanism`: JSON format-flexibility
     * `FEAT_REQ__KVS__snapshots`
     * `FEAT_REQ__KVS__default_value_reset`
     * `FEAT_REQ__KVS__default_value_retrieval`
     * `FEAT_REQ__KVS__persistency`
     * `FEAT_REQ__KVS__integrity_check`
     * `STKH_REQ__30`: JSON storage format
     * `STKH_REQ__8`: Defaults stored in JSON format
     * `STKH_REQ__12`: Support storing data on non-volatile memory
     * `STKH_REQ__13`: POSIX portability
   
   Currently unsupported features:
     * `FEAT_REQ__KVS__maximum_size`
     * `FEAT_REQ__KVS__cpp_rust_interoperability`
     * `FEAT_REQ__KVS__versioning`: JSON version ID
     * `FEAT_REQ__KVS__tooling`: Get/set CLI, JSON editor
     * `STKH_REQ__350`: Safe key-value-store
   
   Additional info:
     * Feature `FEAT_REQ__KVS__supported_datatypes_keys` is matched by the Rust standard which
       defines that `String` and `str` are always valid UTF-8.
     * Feature `FEAT_REQ__KVS__supported_datatypes_values` is matched by using the same types that
       the IPC will use for the Rust implementation.
   
   ## Todos
   
     * Store the current working directory in the KVS struct to make sure snapshots are created at
       the same place as the KVS was opened in case of the application changes the working
       directory

   .. rust:use:: rust_kvs
      :used_name: self


   .. rust:use:: rust_kvs
      :used_name: crate


   .. rust:use:: alloc::string::FromUtf8Error
      :used_name: FromUtf8Error


   .. rust:use:: core::array::TryFromSliceError
      :used_name: TryFromSliceError


   .. rust:use:: core::fmt
      :used_name: fmt


   .. rust:use:: core::ops::Index
      :used_name: Index


   .. rust:use:: std::collections::HashMap
      :used_name: HashMap


   .. rust:use:: std::fs
      :used_name: fs


   .. rust:use:: std::path::Path
      :used_name: Path


   .. rust:use:: std::sync::atomic::AtomicBool
      :used_name: AtomicBool


   .. rust:use:: std::sync::Mutex
      :used_name: Mutex


   .. rust:use:: std::sync::MutexGuard
      :used_name: MutexGuard


   .. rust:use:: std::sync::PoisonError
      :used_name: PoisonError


   .. rust:use:: std::sync::atomic
      :used_name: atomic


   .. rust:use:: adler32::RollingAdler32
      :used_name: RollingAdler32


   .. rust:use:: tinyjson::JsonGenerateError
      :used_name: JsonGenerateError


   .. rust:use:: tinyjson::JsonGenerator
      :used_name: JsonGenerator


   .. rust:use:: tinyjson::JsonParseError
      :used_name: JsonParseError


   .. rust:use:: tinyjson::JsonValue
      :used_name: JsonValue


   .. rubric:: Traits


   .. rust:trait:: rust_kvs::KvsApi
      :index: 1
      :vis: pub
      :layout: [{"type":"keyword","value":"trait"},{"type":"space"},{"type":"name","value":"KvsApi"}]


      .. rubric:: Functions


      .. rust:function:: rust_kvs::KvsApi::flush
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"flush"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"("},{"type":"punctuation","value":")"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


      .. rust:function:: rust_kvs::KvsApi::flush_on_exit
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"flush_on_exit"},{"type":"punctuation","value":"("},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"flush_on_exit"},{"type":"punctuation","value":": "},{"type":"link","value":"bool","target":"bool"},{"type":"punctuation","value":")"}]


      .. rust:function:: rust_kvs::KvsApi::get_all_keys
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"get_all_keys"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"link","value":"Vec","target":"Vec"},{"type":"punctuation","value":"<"},{"type":"link","value":"String","target":"String"},{"type":"punctuation","value":">"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


      .. rust:function:: rust_kvs::KvsApi::get_default_value
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"get_default_value"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"key"},{"type":"punctuation","value":": "},{"type":"punctuation","value":"&"},{"type":"link","value":"str","target":"str"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"link","value":"KvsValue","target":"KvsValue"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


      .. rust:function:: rust_kvs::KvsApi::get_hash_filename
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"get_hash_filename"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"id"},{"type":"punctuation","value":": "},{"type":"link","value":"SnapshotId","target":"SnapshotId"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"String","target":"String"}]


      .. rust:function:: rust_kvs::KvsApi::get_kvs_filename
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"get_kvs_filename"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"id"},{"type":"punctuation","value":": "},{"type":"link","value":"SnapshotId","target":"SnapshotId"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"String","target":"String"}]


      .. rust:function:: rust_kvs::KvsApi::get_value
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"get_value"},{"type":"punctuation","value":"<"},{"type":"name","value":"T"},{"type":"punctuation","value":">"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"key"},{"type":"punctuation","value":": "},{"type":"punctuation","value":"&"},{"type":"link","value":"str","target":"str"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"link","value":"T","target":"T"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"},{"type":"newline"},{"type":"keyword","value":"where"},{"type":"newline"},{"type":"indent"},{"type":"keyword","value":"for"},{"type":"punctuation","value":"<"},{"type":"lifetime","value":"'a"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"link","value":"T","target":"T"},{"type":"punctuation","value":": "},{"type":"link","value":"TryFrom","target":"TryFrom"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"&"},{"type":"lifetime","value":"'a"},{"type":"space"},{"type":"link","value":"KvsValue","target":"KvsValue"},{"type":"punctuation","value":">"},{"type":"punctuation","value":" + "},{"type":"link","value":"Clone","target":"Clone"},{"type":"punctuation","value":","},{"type":"newline"},{"type":"indent"},{"type":"keyword","value":"for"},{"type":"punctuation","value":"<"},{"type":"lifetime","value":"'a"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"link","value":"TryFrom","target":"TryFrom"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"&"},{"type":"lifetime","value":"'a"},{"type":"space"},{"type":"link","value":"KvsValue","target":"KvsValue"},{"type":"punctuation","value":">"},{"type":"punctuation","value":"::"},{"type":"name","value":"Error"},{"type":"punctuation","value":": "},{"type":"link","value":"std","target":"std"},{"type":"punctuation","value":"::"},{"type":"name","value":"fmt"},{"type":"punctuation","value":"::"},{"type":"name","value":"Debug"}]


      .. rust:function:: rust_kvs::KvsApi::is_value_default
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"is_value_default"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"key"},{"type":"punctuation","value":": "},{"type":"punctuation","value":"&"},{"type":"link","value":"str","target":"str"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"link","value":"bool","target":"bool"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


      .. rust:function:: rust_kvs::KvsApi::key_exists
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"key_exists"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"key"},{"type":"punctuation","value":": "},{"type":"punctuation","value":"&"},{"type":"link","value":"str","target":"str"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"link","value":"bool","target":"bool"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


      .. rust:function:: rust_kvs::KvsApi::open
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"open"},{"type":"punctuation","value":"("},{"type":"name","value":"instance_id"},{"type":"punctuation","value":": "},{"type":"link","value":"InstanceId","target":"InstanceId"},{"type":"punctuation","value":", "},{"type":"name","value":"need_defaults"},{"type":"punctuation","value":": "},{"type":"link","value":"OpenNeedDefaults","target":"OpenNeedDefaults"},{"type":"punctuation","value":", "},{"type":"name","value":"need_kvs"},{"type":"punctuation","value":": "},{"type":"link","value":"OpenNeedKvs","target":"OpenNeedKvs"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"link","value":"Self","target":"Self"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"},{"type":"newline"},{"type":"keyword","value":"where"},{"type":"newline"},{"type":"indent"},{"type":"link","value":"Self","target":"Self"},{"type":"punctuation","value":": "},{"type":"link","value":"Sized","target":"Sized"}]


      .. rust:function:: rust_kvs::KvsApi::remove_key
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"remove_key"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"key"},{"type":"punctuation","value":": "},{"type":"punctuation","value":"&"},{"type":"link","value":"str","target":"str"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"("},{"type":"punctuation","value":")"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


      .. rust:function:: rust_kvs::KvsApi::reset
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"reset"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"("},{"type":"punctuation","value":")"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


      .. rust:function:: rust_kvs::KvsApi::set_value
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"set_value"},{"type":"punctuation","value":"<"},{"type":"name","value":"S"},{"type":"punctuation","value":": "},{"type":"link","value":"Into","target":"Into"},{"type":"punctuation","value":"<"},{"type":"link","value":"String","target":"String"},{"type":"punctuation","value":">"},{"type":"punctuation","value":", "},{"type":"name","value":"J"},{"type":"punctuation","value":": "},{"type":"link","value":"Into","target":"Into"},{"type":"punctuation","value":"<"},{"type":"link","value":"KvsValue","target":"KvsValue"},{"type":"punctuation","value":">"},{"type":"punctuation","value":">"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"key"},{"type":"punctuation","value":": "},{"type":"link","value":"S","target":"S"},{"type":"punctuation","value":", "},{"type":"name","value":"value"},{"type":"punctuation","value":": "},{"type":"link","value":"J","target":"J"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"("},{"type":"punctuation","value":")"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


      .. rust:function:: rust_kvs::KvsApi::snapshot_count
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"snapshot_count"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"usize","target":"usize"}]


      .. rust:function:: rust_kvs::KvsApi::snapshot_max_count
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"snapshot_max_count"},{"type":"punctuation","value":"("},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"usize","target":"usize"},{"type":"newline"},{"type":"keyword","value":"where"},{"type":"newline"},{"type":"indent"},{"type":"link","value":"Self","target":"Self"},{"type":"punctuation","value":": "},{"type":"link","value":"Sized","target":"Sized"}]


      .. rust:function:: rust_kvs::KvsApi::snapshot_restore
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"snapshot_restore"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"id"},{"type":"punctuation","value":": "},{"type":"link","value":"SnapshotId","target":"SnapshotId"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"("},{"type":"punctuation","value":")"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]


   .. rust:trait:: rust_kvs::KvsValueGet
      :index: 1
      :vis: pub
      :layout: [{"type":"keyword","value":"trait"},{"type":"space"},{"type":"name","value":"KvsValueGet"}]


      .. rubric:: Functions


      .. rust:function:: rust_kvs::KvsValueGet::get_inner_value
         :index: 2
         :vis: pub
         :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"get_inner_value"},{"type":"punctuation","value":"("},{"type":"name","value":"val"},{"type":"punctuation","value":": "},{"type":"punctuation","value":"&"},{"type":"link","value":"KvsValue","target":"KvsValue"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Option","target":"Option"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"&"},{"type":"link","value":"Self","target":"Self"},{"type":"punctuation","value":">"}]


   .. rubric:: Enums


   .. rust:enum:: rust_kvs::ErrorCode
      :index: 1
      :vis: pub
      :layout: [{"type":"keyword","value":"enum"},{"type":"space"},{"type":"name","value":"ErrorCode"}]

      Runtime Error Codes

      .. rust:struct:: rust_kvs::ErrorCode::UnmappedError
         :index: 2
         :vis: pub
         :toc: UnmappedError
         :layout: [{"type":"name","value":"UnmappedError"}]

         Error that was not yet mapped

      .. rust:struct:: rust_kvs::ErrorCode::FileNotFound
         :index: 2
         :vis: pub
         :toc: FileNotFound
         :layout: [{"type":"name","value":"FileNotFound"}]

         File not found

      .. rust:struct:: rust_kvs::ErrorCode::KvsFileReadError
         :index: 2
         :vis: pub
         :toc: KvsFileReadError
         :layout: [{"type":"name","value":"KvsFileReadError"}]

         KVS file read error

      .. rust:struct:: rust_kvs::ErrorCode::KvsHashFileReadError
         :index: 2
         :vis: pub
         :toc: KvsHashFileReadError
         :layout: [{"type":"name","value":"KvsHashFileReadError"}]

         KVS hash file read error

      .. rust:struct:: rust_kvs::ErrorCode::JsonParserError
         :index: 2
         :vis: pub
         :toc: JsonParserError
         :layout: [{"type":"name","value":"JsonParserError"}]

         JSON parser error

      .. rust:struct:: rust_kvs::ErrorCode::JsonGeneratorError
         :index: 2
         :vis: pub
         :toc: JsonGeneratorError
         :layout: [{"type":"name","value":"JsonGeneratorError"}]

         JSON generator error

      .. rust:struct:: rust_kvs::ErrorCode::PhysicalStorageFailure
         :index: 2
         :vis: pub
         :toc: PhysicalStorageFailure
         :layout: [{"type":"name","value":"PhysicalStorageFailure"}]

         Physical storage failure

      .. rust:struct:: rust_kvs::ErrorCode::IntegrityCorrupted
         :index: 2
         :vis: pub
         :toc: IntegrityCorrupted
         :layout: [{"type":"name","value":"IntegrityCorrupted"}]

         Integrity corrupted

      .. rust:struct:: rust_kvs::ErrorCode::ValidationFailed
         :index: 2
         :vis: pub
         :toc: ValidationFailed
         :layout: [{"type":"name","value":"ValidationFailed"}]

         Validation failed

      .. rust:struct:: rust_kvs::ErrorCode::EncryptionFailed
         :index: 2
         :vis: pub
         :toc: EncryptionFailed
         :layout: [{"type":"name","value":"EncryptionFailed"}]

         Encryption failed

      .. rust:struct:: rust_kvs::ErrorCode::ResourceBusy
         :index: 2
         :vis: pub
         :toc: ResourceBusy
         :layout: [{"type":"name","value":"ResourceBusy"}]

         Resource is busy

      .. rust:struct:: rust_kvs::ErrorCode::OutOfStorageSpace
         :index: 2
         :vis: pub
         :toc: OutOfStorageSpace
         :layout: [{"type":"name","value":"OutOfStorageSpace"}]

         Out of storage space

      .. rust:struct:: rust_kvs::ErrorCode::QuotaExceeded
         :index: 2
         :vis: pub
         :toc: QuotaExceeded
         :layout: [{"type":"name","value":"QuotaExceeded"}]

         Quota exceeded

      .. rust:struct:: rust_kvs::ErrorCode::AuthenticationFailed
         :index: 2
         :vis: pub
         :toc: AuthenticationFailed
         :layout: [{"type":"name","value":"AuthenticationFailed"}]

         Authentication failed

      .. rust:struct:: rust_kvs::ErrorCode::KeyNotFound
         :index: 2
         :vis: pub
         :toc: KeyNotFound
         :layout: [{"type":"name","value":"KeyNotFound"}]

         Key not found

      .. rust:struct:: rust_kvs::ErrorCode::SerializationFailed
         :index: 2
         :vis: pub
         :toc: SerializationFailed
         :layout: [{"type":"name","value":"SerializationFailed"}]

         Serialization failed

      .. rust:struct:: rust_kvs::ErrorCode::InvalidSnapshotId
         :index: 2
         :vis: pub
         :toc: InvalidSnapshotId
         :layout: [{"type":"name","value":"InvalidSnapshotId"}]

         Invalid snapshot ID

      .. rust:struct:: rust_kvs::ErrorCode::ConversionFailed
         :index: 2
         :vis: pub
         :toc: ConversionFailed
         :layout: [{"type":"name","value":"ConversionFailed"}]

         Conversion failed

      .. rust:struct:: rust_kvs::ErrorCode::MutexLockFailed
         :index: 2
         :vis: pub
         :toc: MutexLockFailed
         :layout: [{"type":"name","value":"MutexLockFailed"}]

         Mutex failed

      .. rubric:: Traits implemented


      .. rust:impl:: rust_kvs::ErrorCode::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"std","target":"std"},{"type":"punctuation","value":"::"},{"type":"name","value":"io"},{"type":"punctuation","value":"::"},{"type":"name","value":"Error"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"ErrorCode","target":"ErrorCode"}]
         :toc: impl From for ErrorCode


      .. rust:impl:: rust_kvs::ErrorCode::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"JsonParseError","target":"JsonParseError"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"ErrorCode","target":"ErrorCode"}]
         :toc: impl From for ErrorCode


      .. rust:impl:: rust_kvs::ErrorCode::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"JsonGenerateError","target":"JsonGenerateError"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"ErrorCode","target":"ErrorCode"}]
         :toc: impl From for ErrorCode


      .. rust:impl:: rust_kvs::ErrorCode::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"FromUtf8Error","target":"FromUtf8Error"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"ErrorCode","target":"ErrorCode"}]
         :toc: impl From for ErrorCode


      .. rust:impl:: rust_kvs::ErrorCode::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"TryFromSliceError","target":"TryFromSliceError"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"ErrorCode","target":"ErrorCode"}]
         :toc: impl From for ErrorCode


      .. rust:impl:: rust_kvs::ErrorCode::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"Vec","target":"Vec"},{"type":"punctuation","value":"<"},{"type":"link","value":"u8","target":"u8"},{"type":"punctuation","value":">"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"ErrorCode","target":"ErrorCode"}]
         :toc: impl From for ErrorCode


      .. rust:impl:: rust_kvs::ErrorCode::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"PoisonError","target":"PoisonError"},{"type":"punctuation","value":"<"},{"type":"link","value":"MutexGuard","target":"MutexGuard"},{"type":"punctuation","value":"<"},{"type":"lifetime","value":"'_"},{"type":"punctuation","value":", "},{"type":"link","value":"HashMap","target":"HashMap"},{"type":"punctuation","value":"<"},{"type":"link","value":"std","target":"std"},{"type":"punctuation","value":"::"},{"type":"name","value":"string"},{"type":"punctuation","value":"::"},{"type":"name","value":"String"},{"type":"punctuation","value":", "},{"type":"link","value":"KvsValue","target":"KvsValue"},{"type":"punctuation","value":">"},{"type":"punctuation","value":">"},{"type":"punctuation","value":">"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"ErrorCode","target":"ErrorCode"}]
         :toc: impl From for ErrorCode


   .. rust:enum:: rust_kvs::KvsValue
      :index: 1
      :vis: pub
      :layout: [{"type":"keyword","value":"enum"},{"type":"space"},{"type":"name","value":"KvsValue"}]

      Key-value-storage value

      .. rust:struct:: rust_kvs::KvsValue::Number
         :index: 2
         :vis: pub
         :toc: Number
         :layout: [{"type":"name","value":"Number"},{"type":"punctuation","value":"("},{"type":"link","value":"f64","target":"f64"},{"type":"punctuation","value":")"}]

         Number

      .. rust:struct:: rust_kvs::KvsValue::Boolean
         :index: 2
         :vis: pub
         :toc: Boolean
         :layout: [{"type":"name","value":"Boolean"},{"type":"punctuation","value":"("},{"type":"link","value":"bool","target":"bool"},{"type":"punctuation","value":")"}]

         Boolean

      .. rust:struct:: rust_kvs::KvsValue::String
         :index: 2
         :vis: pub
         :toc: String
         :layout: [{"type":"name","value":"String"},{"type":"punctuation","value":"("},{"type":"link","value":"String","target":"String"},{"type":"punctuation","value":")"}]

         String

      .. rust:struct:: rust_kvs::KvsValue::Null
         :index: 2
         :vis: pub
         :toc: Null
         :layout: [{"type":"name","value":"Null"}]

         Null

      .. rust:struct:: rust_kvs::KvsValue::Array
         :index: 2
         :vis: pub
         :toc: Array
         :layout: [{"type":"name","value":"Array"},{"type":"punctuation","value":"("},{"type":"link","value":"Vec","target":"Vec"},{"type":"punctuation","value":"<"},{"type":"link","value":"KvsValue","target":"KvsValue"},{"type":"punctuation","value":">"},{"type":"punctuation","value":")"}]

         Array

      .. rust:struct:: rust_kvs::KvsValue::Object
         :index: 2
         :vis: pub
         :toc: Object
         :layout: [{"type":"name","value":"Object"},{"type":"punctuation","value":"("},{"type":"link","value":"HashMap","target":"HashMap"},{"type":"punctuation","value":"<"},{"type":"link","value":"String","target":"String"},{"type":"punctuation","value":", "},{"type":"link","value":"KvsValue","target":"KvsValue"},{"type":"punctuation","value":">"},{"type":"punctuation","value":")"}]

         Object

      .. rubric:: Implementations


      .. rust:impl:: rust_kvs::KvsValue
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"KvsValue","target":"KvsValue"}]
         :toc: impl KvsValue


         .. rubric:: Functions


         .. rust:function:: rust_kvs::KvsValue::get
            :index: -1
            :vis: pub
            :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"get"},{"type":"punctuation","value":"<"},{"type":"name","value":"T"},{"type":"punctuation","value":": "},{"type":"link","value":"KvsValueGet","target":"KvsValueGet"},{"type":"punctuation","value":">"},{"type":"punctuation","value":"("},{"type":"punctuation","value":"&"},{"type":"keyword","value":"self"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Option","target":"Option"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"&"},{"type":"link","value":"T","target":"T"},{"type":"punctuation","value":">"}]


      .. rubric:: Traits implemented


      .. rust:impl:: rust_kvs::KvsValue::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"&"},{"type":"link","value":"JsonValue","target":"JsonValue"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"KvsValue","target":"KvsValue"}]
         :toc: impl From for KvsValue


      .. rust:impl:: rust_kvs::KvsValue::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"punctuation","value":"("},{"type":"punctuation","value":")"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"KvsValue","target":"KvsValue"}]
         :toc: impl From for KvsValue


      .. rust:impl:: rust_kvs::KvsValue::Index
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"Index","target":"Index"},{"type":"punctuation","value":"<"},{"type":"link","value":"usize","target":"usize"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"KvsValue","target":"KvsValue"}]
         :toc: impl Index for KvsValue


   .. rust:enum:: rust_kvs::OpenNeedDefaults
      :index: 1
      :vis: pub
      :layout: [{"type":"keyword","value":"enum"},{"type":"space"},{"type":"name","value":"OpenNeedDefaults"}]

      Need-Defaults flag

      .. rust:struct:: rust_kvs::OpenNeedDefaults::Optional
         :index: 2
         :vis: pub
         :toc: Optional
         :layout: [{"type":"name","value":"Optional"}]

         Optional: Open defaults only if available

      .. rust:struct:: rust_kvs::OpenNeedDefaults::Required
         :index: 2
         :vis: pub
         :toc: Required
         :layout: [{"type":"name","value":"Required"}]

         Required: Defaults must be available

      .. rubric:: Traits implemented


      .. rust:impl:: rust_kvs::OpenNeedDefaults::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"bool","target":"bool"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"OpenNeedDefaults","target":"OpenNeedDefaults"}]
         :toc: impl From for OpenNeedDefaults


   .. rust:enum:: rust_kvs::OpenNeedKvs
      :index: 1
      :vis: pub
      :layout: [{"type":"keyword","value":"enum"},{"type":"space"},{"type":"name","value":"OpenNeedKvs"}]

      Need-KVS flag

      .. rust:struct:: rust_kvs::OpenNeedKvs::Optional
         :index: 2
         :vis: pub
         :toc: Optional
         :layout: [{"type":"name","value":"Optional"}]

         Optional: Use an empty KVS if no KVS is available

      .. rust:struct:: rust_kvs::OpenNeedKvs::Required
         :index: 2
         :vis: pub
         :toc: Required
         :layout: [{"type":"name","value":"Required"}]

         Required: KVS must be already exist

      .. rubric:: Traits implemented


      .. rust:impl:: rust_kvs::OpenNeedKvs::From
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"From","target":"From"},{"type":"punctuation","value":"<"},{"type":"link","value":"bool","target":"bool"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"OpenNeedKvs","target":"OpenNeedKvs"}]
         :toc: impl From for OpenNeedKvs


   .. rubric:: Structs and Unions


   .. rust:struct:: rust_kvs::InstanceId
      :index: 1
      :vis: pub
      :toc: struct InstanceId
      :layout: [{"type":"keyword","value":"struct"},{"type":"space"},{"type":"name","value":"InstanceId"},{"type":"punctuation","value":"("},{"type":"link","value":"usize","target":"usize"},{"type":"punctuation","value":")"}]

      Instance ID

      .. rubric:: Implementations


      .. rust:impl:: rust_kvs::InstanceId
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"InstanceId","target":"InstanceId"}]
         :toc: impl InstanceId


         .. rubric:: Functions


         .. rust:function:: rust_kvs::InstanceId::new
            :index: -1
            :vis: pub
            :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"new"},{"type":"punctuation","value":"("},{"type":"name","value":"id"},{"type":"punctuation","value":": "},{"type":"link","value":"usize","target":"usize"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Self","target":"Self"}]

            Create a new instance ID

      .. rubric:: Traits implemented


      .. rust:impl:: rust_kvs::InstanceId::Display
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"fmt","target":"fmt"},{"type":"punctuation","value":"::"},{"type":"name","value":"Display"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"InstanceId","target":"InstanceId"}]
         :toc: impl Display for InstanceId


   .. rust:struct:: rust_kvs::Kvs
      :index: 1
      :vis: pub
      :toc: struct Kvs
      :layout: [{"type":"keyword","value":"struct"},{"type":"space"},{"type":"name","value":"Kvs"}]

      Key-value-storage data

      .. rubric:: Implementations


      .. rust:impl:: rust_kvs::Kvs
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"Kvs","target":"Kvs"}]
         :toc: impl Kvs


      .. rubric:: Traits implemented


      .. rust:impl:: rust_kvs::Kvs::KvsApi
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"KvsApi","target":"KvsApi"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"Kvs","target":"Kvs"}]
         :toc: impl KvsApi for Kvs


      .. rust:impl:: rust_kvs::Kvs::Drop
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"Drop","target":"Drop"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"Kvs","target":"Kvs"}]
         :toc: impl Drop for Kvs


   .. rust:struct:: rust_kvs::KvsBuilder
      :index: 1
      :vis: pub
      :toc: struct KvsBuilder
      :layout: [{"type":"keyword","value":"struct"},{"type":"space"},{"type":"name","value":"KvsBuilder"},{"type":"punctuation","value":"<"},{"type":"name","value":"T"},{"type":"punctuation","value":": "},{"type":"link","value":"KvsApi","target":"KvsApi"},{"type":"punctuation","value":">"}]

      Key-value-storage builder

      .. rubric:: Implementations


      .. rust:impl:: rust_kvs::KvsBuilder
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"punctuation","value":"<"},{"type":"name","value":"T"},{"type":"punctuation","value":">"},{"type":"space"},{"type":"link","value":"KvsBuilder","target":"KvsBuilder"},{"type":"punctuation","value":"<"},{"type":"link","value":"T","target":"T"},{"type":"punctuation","value":">"},{"type":"newline"},{"type":"keyword","value":"where"},{"type":"newline"},{"type":"indent"},{"type":"link","value":"T","target":"T"},{"type":"punctuation","value":": "},{"type":"link","value":"KvsApi","target":"KvsApi"}]
         :toc: impl KvsBuilder


         .. rubric:: Functions


         .. rust:function:: rust_kvs::KvsBuilder::build
            :index: -1
            :vis: pub
            :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"build"},{"type":"punctuation","value":"("},{"type":"keyword","value":"self"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Result","target":"Result"},{"type":"punctuation","value":"<"},{"type":"link","value":"T","target":"T"},{"type":"punctuation","value":", "},{"type":"link","value":"ErrorCode","target":"ErrorCode"},{"type":"punctuation","value":">"}]

            Finalize the builder and open the key-value-storage
            
            Calls `Kvs::open` with the configured settings.
            
            # Features
              * `FEAT_REQ__KVS__default_values`
              * `FEAT_REQ__KVS__multiple_kvs`
              * `FEAT_REQ__KVS__integrity_check`
            
            # Return Values
              * Ok: KVS instance
              * `ErrorCode::ValidationFailed`: KVS hash validation failed
              * `ErrorCode::JsonParserError`: JSON parser error
              * `ErrorCode::KvsFileReadError`: KVS file read error
              * `ErrorCode::KvsHashFileReadError`: KVS hash file read error
              * `ErrorCode::UnmappedError`: Generic error

         .. rust:function:: rust_kvs::KvsBuilder::need_defaults
            :index: -1
            :vis: pub
            :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"need_defaults"},{"type":"punctuation","value":"("},{"type":"keyword","value":"mut"},{"type":"space"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"flag"},{"type":"punctuation","value":": "},{"type":"link","value":"bool","target":"bool"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"KvsBuilder","target":"KvsBuilder"},{"type":"punctuation","value":"<"},{"type":"link","value":"T","target":"T"},{"type":"punctuation","value":">"}]

            Configure if defaults must exist when opening the KVS
            
            # Parameters
              * `flag`: Yes = `true`, no = `false` (default)
            
            # Return Values
              * KvsBuilder instance

         .. rust:function:: rust_kvs::KvsBuilder::need_kvs
            :index: -1
            :vis: pub
            :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"need_kvs"},{"type":"punctuation","value":"("},{"type":"keyword","value":"mut"},{"type":"space"},{"type":"keyword","value":"self"},{"type":"punctuation","value":", "},{"type":"name","value":"flag"},{"type":"punctuation","value":": "},{"type":"link","value":"bool","target":"bool"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"KvsBuilder","target":"KvsBuilder"},{"type":"punctuation","value":"<"},{"type":"link","value":"T","target":"T"},{"type":"punctuation","value":">"}]

            Configure if KVS must exist when opening the KVS
            
            # Parameters
              * `flag`: Yes = `true`, no = `false` (default)
            
            # Return Values
              * KvsBuilder instance

         .. rust:function:: rust_kvs::KvsBuilder::new
            :index: -1
            :vis: pub
            :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"new"},{"type":"punctuation","value":"("},{"type":"name","value":"instance_id"},{"type":"punctuation","value":": "},{"type":"link","value":"InstanceId","target":"InstanceId"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Self","target":"Self"}]

            Create a builder to open the key-value-storage
            
            Only the instance ID must be set. All other settings are using default values until changed
            via the builder API.
            
            # Parameters
              * `instance_id`: Instance ID
            
            # Return Values
              * KvsBuilder instance

   .. rust:struct:: rust_kvs::SnapshotId
      :index: 1
      :vis: pub
      :toc: struct SnapshotId
      :layout: [{"type":"keyword","value":"struct"},{"type":"space"},{"type":"name","value":"SnapshotId"},{"type":"punctuation","value":"("},{"type":"link","value":"usize","target":"usize"},{"type":"punctuation","value":")"}]

      Snapshot ID

      .. rubric:: Implementations


      .. rust:impl:: rust_kvs::SnapshotId
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"SnapshotId","target":"SnapshotId"}]
         :toc: impl SnapshotId


         .. rubric:: Functions


         .. rust:function:: rust_kvs::SnapshotId::new
            :index: -1
            :vis: pub
            :layout: [{"type":"keyword","value":"fn"},{"type":"space"},{"type":"name","value":"new"},{"type":"punctuation","value":"("},{"type":"name","value":"id"},{"type":"punctuation","value":": "},{"type":"link","value":"usize","target":"usize"},{"type":"punctuation","value":")"},{"type":"space"},{"type":"returns"},{"type":"space"},{"type":"link","value":"Self","target":"Self"}]

            Create a new Snapshot ID

      .. rubric:: Traits implemented


      .. rust:impl:: rust_kvs::SnapshotId::Display
         :index: -1
         :vis: pub
         :layout: [{"type":"keyword","value":"impl"},{"type":"space"},{"type":"link","value":"fmt","target":"fmt"},{"type":"punctuation","value":"::"},{"type":"name","value":"Display"},{"type":"space"},{"type":"keyword","value":"for"},{"type":"space"},{"type":"link","value":"SnapshotId","target":"SnapshotId"}]
         :toc: impl Display for SnapshotId

