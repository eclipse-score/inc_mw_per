{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#adler32@1.2.0","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/adler32-1.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"adler32","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/adler32-1.2.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libadler32-37a0525d1c76412b.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libadler32-37a0525d1c76412b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tinyjson@2.5.1","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tinyjson-2.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tinyjson","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tinyjson-2.5.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libtinyjson-3ee115ecd092c329.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libtinyjson-3ee115ecd092c329.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cfg-if-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cfg-if-1.0.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libcfg_if-4401a9b80495548e.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libcfg_if-4401a9b80495548e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rust_kvs","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unexpected `cfg` condition name: `coverage_nightly`\n   --> src/rust/rust_kvs/src/lib.rs:137:13\n    |\n137 | #![cfg_attr(coverage_nightly, feature(coverage_attribute))]\n    |             ^^^^^^^^^^^^^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(coverage_nightly)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(coverage_nightly)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using a Cargo feature instead","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(coverage_nightly)'] }","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(coverage_nightly)\");` to the top of the `build.rs`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(unexpected_cfgs)]` on by default","rendered":null,"spans":[]}],"code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","message":"unexpected `cfg` condition name: `coverage_nightly`","spans":[{"byte_end":5919,"byte_start":5903,"column_end":29,"column_start":13,"expansion":null,"file_name":"src/rust/rust_kvs/src/lib.rs","is_primary":true,"label":null,"line_end":137,"line_start":137,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":13,"text":"#![cfg_attr(coverage_nightly, feature(coverage_attribute))]"}]}]}}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.9.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitflags","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-2.9.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libbitflags-e301e063792c9aac.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libbitflags-e301e063792c9aac.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pico-args@0.5.0","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pico-args-0.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pico_args","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pico-args-0.5.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libpico_args-d9e82ca8dbf36eab.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libpico_args-d9e82ca8dbf36eab.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.21.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.21.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","race","std"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libonce_cell-a0538d40dd182819.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libonce_cell-a0538d40dd182819.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fastrand@2.3.0","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/fastrand-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fastrand","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/fastrand-2.3.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libfastrand-b967019321eacf2d.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libfastrand-b967019321eacf2d.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#linux-raw-sys@0.9.4","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/linux-raw-sys-0.9.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"linux_raw_sys","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/linux-raw-sys-0.9.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["elf","errno","general","ioctl","no_std"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/liblinux_raw_sys-6471e113c6680e41.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/liblinux_raw_sys-6471e113c6680e41.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.3.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.3.3/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/build/getrandom-8eb593454ad3eb91/build-script-build"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.7","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-1.0.7/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-1.0.7/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fs","std"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/build/rustix-70b76c5d0f29852f/build-script-build"],"executable":null,"fresh":false}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/home/dcalavrezo/sources/inc_mw_per/target/debug/build/getrandom-24d5395f6a1785d2/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.174/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.174/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/build/libc-237ef186908011d7/build-script-build"],"executable":null,"fresh":false}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.7","linked_libs":[],"linked_paths":[],"cfgs":["static_assertions","linux_raw","linux_like","linux_kernel"],"env":[],"out_dir":"/home/dcalavrezo/sources/inc_mw_per/target/debug/build/rustix-18406a6bb8916bce/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_const_extern_fn"],"env":[],"out_dir":"/home/dcalavrezo/sources/inc_mw_per/target/debug/build/libc-6e96a3c09ece9e62/out"}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rust_kvs","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/librust_kvs-f9e43a89afe15f7b.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/librust_kvs-f9e43a89afe15f7b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs_tool#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs_tool/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"kvs_tool","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs_tool/src/kvs_tool.rs","edition":"2021","doc":true,"doctest":false,"test":true},"message":{"rendered":"warning: unused imports: `OpenNeedDefaults` and `OpenNeedKvs`\n  --> src/rust/rust_kvs_tool/src/kvs_tool.rs:84:63\n   |\n84 |     ErrorCode, InstanceId, Kvs, KvsApi, KvsBuilder, KvsValue, OpenNeedDefaults, OpenNeedKvs,\n   |                                                               ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":3702,"byte_start":3671,"column_end":92,"column_start":61,"expansion":null,"file_name":"src/rust/rust_kvs_tool/src/kvs_tool.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":92,"highlight_start":61,"text":"    ErrorCode, InstanceId, Kvs, KvsApi, KvsBuilder, KvsValue, OpenNeedDefaults, OpenNeedKvs,"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `OpenNeedDefaults` and `OpenNeedKvs`","spans":[{"byte_end":3689,"byte_start":3673,"column_end":79,"column_start":63,"expansion":null,"file_name":"src/rust/rust_kvs_tool/src/kvs_tool.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":63,"text":"    ErrorCode, InstanceId, Kvs, KvsApi, KvsBuilder, KvsValue, OpenNeedDefaults, OpenNeedKvs,"}]},{"byte_end":3702,"byte_start":3691,"column_end":92,"column_start":81,"expansion":null,"file_name":"src/rust/rust_kvs_tool/src/kvs_tool.rs","is_primary":true,"label":null,"line_end":84,"line_start":84,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":92,"highlight_start":81,"text":"    ErrorCode, InstanceId, Kvs, KvsApi, KvsBuilder, KvsValue, OpenNeedDefaults, OpenNeedKvs,"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs_tool#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs_tool/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"kvs_tool","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs_tool/src/kvs_tool.rs","edition":"2021","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_tool-d116fdaec230d770"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_tool-d116fdaec230d770","fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.174","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.174/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.174/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/liblibc-8c5aa5eb947b56af.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/liblibc-8c5aa5eb947b56af.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.3.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libgetrandom-3c54ed69cc4645e4.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libgetrandom-3c54ed69cc4645e4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.7","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-1.0.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustix","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustix-1.0.7/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fs","std"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/librustix-dfac96628721dd43.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/librustix-dfac96628721dd43.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tempfile@3.20.0","manifest_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.20.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tempfile","src_path":"/home/dcalavrezo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.20.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","getrandom"],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libtempfile-00bd9e08fe93d614.rlib","/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/libtempfile-00bd9e08fe93d614.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rust_kvs","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unexpected `cfg` condition name: `coverage_nightly`\n   --> src/rust/rust_kvs/src/lib.rs:137:13\n    |\n137 | #![cfg_attr(coverage_nightly, feature(coverage_attribute))]\n    |             ^^^^^^^^^^^^^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(coverage_nightly)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(coverage_nightly)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"consider using a Cargo feature instead","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(coverage_nightly)'] }","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(coverage_nightly)\");` to the top of the `build.rs`","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"`#[warn(unexpected_cfgs)]` on by default","rendered":null,"spans":[]}],"code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","message":"unexpected `cfg` condition name: `coverage_nightly`","spans":[{"byte_end":5919,"byte_start":5903,"column_end":29,"column_start":13,"expansion":null,"file_name":"src/rust/rust_kvs/src/lib.rs","is_primary":true,"label":null,"line_end":137,"line_start":137,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":13,"text":"#![cfg_attr(coverage_nightly, feature(coverage_attribute))]"}]}]}}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_check_need_kvs","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_check_need_kvs.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_check_need_kvs-e4dffc45ec94f3f6"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_check_need_kvs-e4dffc45ec94f3f6","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_checksum_wrong","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_checksum_wrong.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_checksum_wrong-d2f9486129979b57"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_checksum_wrong-d2f9486129979b57","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_snapshot_rotation","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_snapshot_rotation.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_snapshot_rotation-92e487f49a4ecccc"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_snapshot_rotation-92e487f49a4ecccc","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_new_wo_defaults","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_new_wo_defaults.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_new_wo_defaults-dff5ba608456bf34"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_new_wo_defaults-dff5ba608456bf34","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_snapshot_restore","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_snapshot_restore.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_snapshot_restore-693fb19cd8c52f3a"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_snapshot_restore-693fb19cd8c52f3a","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_new_wo_defaults_builder","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_new_wo_defaults_builder.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_new_wo_defaults_builder-d57790eb69f815b4"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_new_wo_defaults_builder-d57790eb69f815b4","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"cit_persistency","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/cit_persistency.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/cit_persistency-53de2a6ed5f7b746"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/cit_persistency-53de2a6ed5f7b746","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_check_need_defaults","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_check_need_defaults.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_check_need_defaults-635f9e6946f78335"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_check_need_defaults-635f9e6946f78335","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_default_values","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_default_values.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_default_values-5d4221be06ce4977"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_default_values-5d4221be06ce4977","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["test"],"crate_types":["bin"],"name":"kvs_checksum_missing","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/tests/kvs_checksum_missing.rs","edition":"2021","doc":false,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_checksum_missing-946ee290dc73b6b0"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/kvs_checksum_missing-946ee290dc73b6b0","fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs#0.1.0","manifest_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rust_kvs","src_path":"/home/dcalavrezo/sources/inc_mw_per/src/rust/rust_kvs/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/rust_kvs-67e3a1f4bb06ff06"],"executable":"/home/dcalavrezo/sources/inc_mw_per/target/debug/deps/rust_kvs-67e3a1f4bb06ff06","fresh":false}
{"reason":"build-finished","success":true}

running 29 tests
test tests::test_conversion_failed_from_utf8_error ... ok
test tests::test_conversion_failed_from_vec_u8 ... ok
test tests::test_build ... ok
test tests::test_build_with_defaults ... ok
test tests::test_drop ... ok
test tests::test_conversion_failed_from_slice_error ... ok
test tests::test_flush_on_exit ... ok
test tests::test_get_inner_value ... ok
test tests::test_get_all_keys ... ok
test tests::test_get_value_try_from_error ... ok
test tests::test_key_exists ... ok
test tests::test_kvs_reset ... ok
test tests::test_build_with_kvs ... ok
test tests::test_kvs_working_dir_not_found ... ok
test tests::test_kvs_open_and_set_get_value ... ok
test tests::test_mutex_lock_failed_from_poison_error ... ok
test tests::test_get_value ... ok
test tests::test_need_defaults ... ok
test tests::test_kvs_remove_key ... ok
test tests::test_kvs_working_dir_is_file ... ok
test tests::test_get_filename ... ok
test tests::test_unknown_error_code_from_io_error ... ok
test tests::test_unknown_error_code_from_json_parse_error ... ok
test tests::test_unknown_error_code_from_json_generate_error ... ok
test tests::test_kvs_key_exists_and_get_all_keys ... ok
test tests::test_new_kvs_builder ... ok
test tests::test_reset ... ok
test tests::test_need_kvs ... ok
test tests::test_kvs_flush_and_snapshot ... ok

test result: ok. 29 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s


running 3 tests
test cit_persistency_flush_on_exit_disabled_drop_data ... ok
test cit_persistency_flush_on_exit_disabled_manual_flush ... ok
test cit_persistency_flush_on_exit_enabled ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_check_needs_defaults ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_check_needs_kvs ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_checksum_missing ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_checksum_wrong ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_without_defaults ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_without_defaults ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_without_defaults_builder ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_snapshot_restore ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test kvs_snapshot_rotation ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test src/rust/rust_kvs/src/lib.rs - (line 58) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.18s

